{"version":3,"file":"469.js","mappings":"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","sources":["webpack://test-frontend-spa/./src/components/display-data/DataGridTable/DataGridToolbar.tsx","webpack://test-frontend-spa/./src/components/display-data/DataGridTable/columns.tsx","webpack://test-frontend-spa/./src/utils/mock.fetch.ts","webpack://test-frontend-spa/./src/components/display-data/DataGridTable/useDataGrid.tsx","webpack://test-frontend-spa/./src/components/display-data/DataGridTable/AppConfirmDialog.tsx","webpack://test-frontend-spa/./src/components/display-data/DataGridTable/FullFeaturedCrudGrid.tsx","webpack://test-frontend-spa/./src/components/display-data/DataGridTable/useConfirmDialog.tsx"],"sourcesContent":["import React from \"react\";\nimport { GridToolbarContainer } from \"@mui/x-data-grid\";\nimport { Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { label_text } from \"../../../utils/text\";\nvar DataGridToolbar = function (_a) {\n    var handleAddNewRow = _a.handleAddNewRow;\n    return (React.createElement(GridToolbarContainer, { sx: { justifyContent: \"space-between\" } },\n        React.createElement(Button, { color: \"primary\", startIcon: React.createElement(AddIcon, null), onClick: handleAddNewRow }, label_text.addNewRecord)));\n};\nexport default DataGridToolbar;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from \"react\";\nimport { GridEditInputCell, } from \"@mui/x-data-grid\";\nimport { databaseColumnNames } from \"../../../utils/text\";\nvar commonColsDef = {\n    field: \"\",\n    editable: true,\n    minWidth: 100,\n    renderEditCell: function (params) {\n        return React.createElement(GridEditInputCell, __assign({}, params, { title: params.error_message || \"\" }));\n    },\n    preProcessEditCellProps: function (params) {\n        var hasError = params.props.value === null;\n        return __assign(__assign({}, params.props), { error: hasError, error_message: hasError ? \"Поле не должно быть пустым\" : \"\" });\n    },\n};\nexport var columnsDef = [\n    __assign(__assign({}, commonColsDef), { field: \"employeeNumber\", type: \"number\", headerName: databaseColumnNames.employeeNumber, align: \"left\", minWidth: 60, flex: 1 }),\n    {\n        editable: true,\n        field: \"employeeSigDate\",\n        type: \"dateTime\",\n        minWidth: 100,\n        headerName: databaseColumnNames.employeeSigDate,\n        flex: 1,\n        renderCell: function (params) {\n            var _a, _b;\n            return (React.createElement(\"div\", { title: (_a = params.value) === null || _a === void 0 ? void 0 : _a.toLocaleString() }, (_b = params.value) === null || _b === void 0 ? void 0 : _b.toLocaleDateString()));\n        },\n        valueGetter: function (value) {\n            return new Date(value);\n        },\n    },\n    __assign(__assign({}, commonColsDef), { field: \"documentType\", headerName: databaseColumnNames.documentType, flex: 1 }),\n    __assign(__assign({}, commonColsDef), { field: \"documentName\", headerName: databaseColumnNames.documentName, flex: 1 }),\n    __assign(__assign({}, commonColsDef), { field: \"documentStatus\", headerName: databaseColumnNames.documentStatus, flex: 1 }),\n    {\n        editable: true,\n        field: \"companySigDate\",\n        type: \"dateTime\",\n        minWidth: 100,\n        headerName: databaseColumnNames.companySigDate,\n        flex: 1,\n        renderCell: function (params) {\n            var _a, _b;\n            return (React.createElement(\"div\", { title: (_a = params.value) === null || _a === void 0 ? void 0 : _a.toLocaleString() }, (_b = params.value) === null || _b === void 0 ? void 0 : _b.toLocaleDateString()));\n        },\n        valueGetter: function (value) {\n            return new Date(value);\n        },\n    },\n    __assign(__assign({}, commonColsDef), { field: \"employeeSignatureName\", headerName: databaseColumnNames.employeeSignatureName, flex: 1 }),\n    __assign(__assign({}, commonColsDef), { field: \"companySignatureName\", headerName: databaseColumnNames.companySignatureName, flex: 1 }),\n];\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { error_messages } from \"./text\";\nexport var mock_login_success = function (resolveddData) {\n    return Promise.resolve({\n        ok: true,\n        json: function () {\n            return Promise.resolve({\n                data: resolveddData,\n                error_code: 0,\n            });\n        },\n    });\n};\nexport var mock_login_failed = function (resp) {\n    return Promise.resolve({\n        ok: true,\n        json: function () {\n            return Promise.resolve({\n                data: null,\n                error_code: 2004,\n                error_text: error_messages.accessDeny,\n            });\n        },\n    });\n};\nexport var mock_CRUD_success = function (data) {\n    return Promise.resolve({\n        ok: true,\n        json: function () {\n            return Promise.resolve({\n                data: data,\n                error_code: 0,\n            });\n        },\n    });\n};\nexport var mock_CRUD_failed = function (resolved) {\n    return Promise.resolve({\n        ok: true,\n        json: function () {\n            return Promise.resolve(__assign({ data: null, error_code: 2004, error_text: error_messages.accessDeny }, resolved));\n        },\n    });\n};\nexport var mock_Fetch_throw_error = function () {\n    throw new Error(\"mocked error\");\n};\nexport var mocked_single_record = {\n    companySigDate: \"2022-07-23T11:19:15.027Z\",\n    companySignatureName: \"Приказ.sig\",\n    documentName: \"Договор 2.pdf\",\n    documentStatus: \"Подписан\",\n    documentType: \"Приказ о приеме\",\n    employeeNumber: \"1234\",\n    employeeSigDate: \"2022-07-23T11:19:15.017Z\",\n    employeeSignatureName: \"Приказ 2.sig\",\n};\nexport var emptySingleRecord = {\n    companySigDate: \"\",\n    companySignatureName: \"\",\n    documentName: \"\",\n    documentStatus: \"\",\n    documentType: \"\",\n    employeeNumber: \"\",\n    employeeSigDate: \"\",\n    employeeSignatureName: \"\",\n};\nexport var hasEmptyFields = function (record) {\n    var keys = Object.keys(record).filter(function (key) { return key !== \"id\"; });\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (!record[key])\n            return true;\n    }\n    return false;\n};\nexport var mocked_read_response_data = [\n    {\n        companySigDate: \"2022-12-23T11:19:27.017Z\",\n        companySignatureName: \"Договор.sig\",\n        documentName: \"Договор.pdf\",\n        documentStatus: \"Подписан\",\n        documentType: \"Трудовой договор\",\n        employeeNumber: \"1111\",\n        employeeSigDate: \"2022-12-23T11:19:27.017Z\",\n        employeeSignatureName: \"Договор.sig\",\n        id: \"56afec6f-c72d-4d6a-b93a-b26df5fcc48a\",\n    },\n    {\n        companySigDate: \"2022-11-23T11:19:30.027Z\",\n        companySignatureName: \"Приказ.sig\",\n        documentName: \"Договор 2.pdf\",\n        documentStatus: \"Подписан\",\n        documentType: \"Приказ о приеме\",\n        employeeNumber: \"2222\",\n        employeeSigDate: \"2022-11-23T11:19:27.017Z\",\n        employeeSignatureName: \"Приказ 2.sig\",\n        id: \"ce4ab411-f895-400a-9599-db99a1c32174\",\n    },\n    {\n        companySigDate: \"2022-10-23T11:19:25.017Z\",\n        companySignatureName: \"Договор.sig\",\n        documentName: \"Договор.pdf\",\n        documentStatus: \"Подписан\",\n        documentType: \"Трудовой договор\",\n        employeeNumber: \"3333\",\n        employeeSigDate: \"2022-10-23T11:19:25.017Z\",\n        employeeSignatureName: \"Договор.sig\",\n        id: \"56afec6f-c72d-4d6a-b93a-b26df5fcc48b\",\n    },\n    {\n        companySigDate: \"2022-09-23T11:19:22.027Z\",\n        companySignatureName: \"Приказ.sig\",\n        documentName: \"Договор 2.pdf\",\n        documentStatus: \"Подписан\",\n        documentType: \"Приказ о приеме\",\n        employeeNumber: \"4444\",\n        employeeSigDate: \"2022-09-23T11:19:22.017Z\",\n        employeeSignatureName: \"Приказ 2.sig\",\n        id: \"ce4ab411-f895-400a-9599-db99a1c3217c\",\n    },\n    {\n        companySigDate: \"2022-08-23T11:19:18.017Z\",\n        companySignatureName: \"Договор.sig\",\n        documentName: \"Договор.pdf\",\n        documentStatus: \"Подписан\",\n        documentType: \"Трудовой договор\",\n        employeeNumber: \"5555\",\n        employeeSigDate: \"2022-08-23T11:19:18.017Z\",\n        employeeSignatureName: \"Договор.sig\",\n        id: \"56afec6f-c72d-4d6a-b93a-b26df5fcc48d\",\n    },\n];\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport { GridActionsCellItem, GridRowEditStopReasons, GridRowModes, useGridApiRef, } from \"@mui/x-data-grid\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/DeleteOutlined\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CancelIcon from \"@mui/icons-material/Close\";\nimport { columnsDef } from \"./columns\";\nimport { emptySingleRecord, hasEmptyFields } from \"../../../utils/mock.fetch\";\nimport { nanoid } from \"nanoid\";\nimport { useAppSnackbar } from \"../../../hooks/useAppSnackbar\";\nimport { useAppDispatch } from \"../../../store\";\nimport { Loop } from \"@mui/icons-material\";\nimport { useConfirmDialog } from \"./useConfirmDialog\";\nimport { useCreateRowMutation, useDeleteRowMutation, useUpdateRowMutation, } from \"../../../api/databaseAPI\";\nexport var useDataGrid = function () {\n    var _a = useState({}), rowModesModel = _a[0], setRowModesModel = _a[1];\n    var _b = useState([]), fetchingRows = _b[0], setFetchingRows = _b[1];\n    var showSnackbar = useAppSnackbar().showSnackbar;\n    var dispatch = useAppDispatch();\n    var _c = useConfirmDialog(), askConfirm = _c.askConfirm, confirmOpen = _c.confirmOpen, onClose = _c.onClose, onConfirm = _c.onConfirm, setConfirmOpen = _c.setConfirmOpen;\n    // newRows - массив копий свежесозданных строк,\n    // которые еще не отправлены на сервер.\n    var _d = useState([]), newRows = _d[0], setNewRows = _d[1];\n    var apiRef = useGridApiRef();\n    var createRow = useCreateRowMutation()[0];\n    var updateRow = useUpdateRowMutation()[0];\n    var deleteRow = useDeleteRowMutation()[0];\n    var handleEditClick = useCallback(function (id) { return function () {\n        var _a;\n        setRowModesModel(__assign(__assign({}, rowModesModel), (_a = {}, _a[id] = { mode: GridRowModes.Edit }, _a)));\n    }; }, [rowModesModel]);\n    var handleSaveClick = useCallback(function (id) { return function () {\n        var _a;\n        if (fetchingRows.includes(id))\n            return;\n        setRowModesModel(__assign(__assign({}, rowModesModel), (_a = {}, _a[id] = { mode: GridRowModes.View }, _a)));\n    }; }, [rowModesModel]);\n    var deleteAfterConfirm = useCallback(function (callback) {\n        if (askConfirm) {\n            setConfirmOpen(function () { return callback; });\n        }\n        else\n            callback();\n    }, [askConfirm]);\n    var handleDeleteClick = useCallback(function (id) { return function () {\n        var processDelete = function () { return __awaiter(void 0, void 0, void 0, function () {\n            var errorName, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorName = \"\";\n                        response = deleteRow(id);\n                        addFetchingRow(id);\n                        return [4 /*yield*/, response.unwrap().catch(function (err) {\n                                errorName = err.name;\n                            })];\n                    case 1:\n                        _a.sent();\n                        removeFetchingRow(id);\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        deleteAfterConfirm(processDelete);\n    }; }, [dispatch, deleteAfterConfirm]);\n    var handleCancelClick = useCallback(function (id) { return function () {\n        var _a;\n        if (fetchingRows.includes(id))\n            return;\n        setRowModesModel(__assign(__assign({}, rowModesModel), (_a = {}, _a[id] = { mode: GridRowModes.View, ignoreModifications: true }, _a)));\n        var editedRow = newRows.find(function (row) { return row.id === id; });\n        if (editedRow) {\n            removeRow(id);\n        }\n    }; }, [newRows, rowModesModel]);\n    var handleRowEditStop = useCallback(function (params, event) {\n        event.defaultMuiPrevented = true;\n        switch (params.reason) {\n            case GridRowEditStopReasons.escapeKeyDown:\n                handleCancelClick(params.id)();\n                break;\n            case GridRowEditStopReasons.enterKeyDown:\n                handleSaveClick(params.id)();\n        }\n    }, [handleCancelClick, handleSaveClick]);\n    var processRowUpdate = useCallback(function (newRow) { return __awaiter(void 0, void 0, void 0, function () {\n        var returnedRow, id, error, creatingRow, response, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    returnedRow = newRow;\n                    id = newRow.id;\n                    error = { name: \"\", message: \"\" };\n                    if (hasEmptyFields(newRow)) {\n                        return [2 /*return*/, Promise.reject(\"Заполните пустые поля\")];\n                    }\n                    creatingRow = newRows.find(function (row) { return row.id === id; });\n                    if (!creatingRow) return [3 /*break*/, 2];\n                    response = createRow(newRow);\n                    addFetchingRow(id);\n                    return [4 /*yield*/, response\n                            .unwrap()\n                            .then(function (row) {\n                            returnedRow = row;\n                            removeRow(id);\n                        })\n                            .catch(function (err) { return (error = err); })];\n                case 1:\n                    _a.sent();\n                    removeFetchingRow(id);\n                    return [3 /*break*/, 4];\n                case 2:\n                    response = updateRow(__assign(__assign({}, newRow), { id: id }));\n                    addFetchingRow(id);\n                    return [4 /*yield*/, response\n                            .unwrap()\n                            .then(function (row) {\n                            returnedRow = row;\n                        })\n                            .catch(function (err) { return (error = err); })];\n                case 3:\n                    _a.sent();\n                    removeFetchingRow(id);\n                    _a.label = 4;\n                case 4:\n                    if (error.message) {\n                        return [2 /*return*/, Promise.reject()];\n                    }\n                    return [2 /*return*/, returnedRow];\n            }\n        });\n    }); }, [newRows, dispatch]);\n    var onProcessRowUpdateError = useCallback(function (error) {\n        showSnackbar(error);\n    }, []);\n    var handleRowModesModelChange = useCallback(function (newRowModesModel) {\n        setRowModesModel(newRowModesModel);\n    }, []);\n    var handleAddNewRow = useCallback(function () {\n        var newRow = __assign(__assign({ id: nanoid() }, emptySingleRecord), { companySigDate: new Date().toISOString(), employeeSigDate: new Date().toISOString() });\n        addNewRow(newRow);\n        setRowModesModel(function (oldModel) {\n            var _a;\n            return (__assign(__assign({}, oldModel), (_a = {}, _a[newRow.id] = {\n                mode: GridRowModes.Edit,\n                fieldToFocus: \"employeeNumber\",\n            }, _a)));\n        });\n        apiRef.current.setPage(0);\n        apiRef.current.sortColumn(\"companySigDate\", \"desc\");\n    }, [apiRef.current]);\n    var addNewRow = useCallback(function (newRow) {\n        setNewRows(function (prev) { return __spreadArray(__spreadArray([], prev, true), [newRow], false); });\n    }, []);\n    var removeRow = useCallback(function (id) {\n        setNewRows(function (prev) { return prev.filter(function (row) { return row.id !== id; }); });\n    }, []);\n    var addFetchingRow = useCallback(function (id) {\n        setFetchingRows(function (prev) { return __spreadArray(__spreadArray([], prev, true), [id], false); });\n    }, []);\n    var removeFetchingRow = useCallback(function (id) {\n        setFetchingRows(function (prev) { return prev.filter(function (rowID) { return rowID !== id; }); });\n    }, []);\n    var columns = useMemo(function () {\n        return __spreadArray(__spreadArray([], columnsDef, true), [\n            {\n                field: \"actions\",\n                type: \"actions\",\n                headerName: \"Actions\",\n                minWidth: 126,\n                cellClassName: \"actions\",\n                getActions: function (_a) {\n                    var _b;\n                    var id = _a.id;\n                    var isInEditMode = ((_b = rowModesModel[id]) === null || _b === void 0 ? void 0 : _b.mode) === GridRowModes.Edit;\n                    var enableIndicator = fetchingRows.includes(id);\n                    var indicator = enableIndicator\n                        ? [\n                            React.createElement(GridActionsCellItem, { icon: React.createElement(Loop, { color: \"warning\" }), label: \"indicator\", disabled: true, sx: {\n                                    animation: \"spin 2s linear infinite\",\n                                    \"@keyframes spin\": {\n                                        \"0%\": {\n                                            transform: \"rotate(360deg)\",\n                                        },\n                                        \"100%\": {\n                                            transform: \"rotate(0deg)\",\n                                        },\n                                    },\n                                } }),\n                        ]\n                        : [\n                            React.createElement(GridActionsCellItem, { icon: React.createElement(Loop, { color: \"inherit\" }), label: \"indicator\", disabled: true }),\n                        ];\n                    var editModeActions = [\n                        React.createElement(GridActionsCellItem, { icon: React.createElement(SaveIcon, null), label: \"Save\", sx: {\n                                color: \"primary.main\",\n                            }, onClick: handleSaveClick(id), disabled: enableIndicator }),\n                        React.createElement(GridActionsCellItem, { icon: React.createElement(CancelIcon, null), label: \"Cancel\", className: \"textPrimary\", onClick: handleCancelClick(id), color: \"inherit\", disabled: enableIndicator }),\n                    ];\n                    var viewModeActions = [\n                        React.createElement(GridActionsCellItem, { icon: React.createElement(EditIcon, null), label: \"Edit\", className: \"textPrimary\", onClick: handleEditClick(id), color: \"inherit\", disabled: enableIndicator }),\n                        React.createElement(GridActionsCellItem, { icon: React.createElement(DeleteIcon, null), label: \"Delete\", onClick: handleDeleteClick(id), color: \"inherit\", disabled: enableIndicator }),\n                    ];\n                    if (isInEditMode) {\n                        return __spreadArray(__spreadArray([], editModeActions, true), indicator, true);\n                    }\n                    return __spreadArray(__spreadArray([], viewModeActions, true), indicator, true);\n                },\n            },\n        ], false);\n    }, [\n        fetchingRows,\n        rowModesModel,\n        handleSaveClick,\n        handleCancelClick,\n        handleEditClick,\n        handleDeleteClick,\n    ]);\n    var handlers = {\n        handleRowEditStop: handleRowEditStop,\n        processRowUpdate: processRowUpdate,\n        handleRowModesModelChange: handleRowModesModelChange,\n        handleAddNewRow: handleAddNewRow,\n        onProcessRowUpdateError: onProcessRowUpdateError,\n        onClose: onClose,\n        onConfirm: onConfirm,\n    };\n    return {\n        rows: newRows,\n        rowModesModel: rowModesModel,\n        columns: columns,\n        handlers: handlers,\n        apiRef: apiRef,\n        activeRequests: fetchingRows.length > 0,\n        confirmOpen: !!confirmOpen,\n    };\n};\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { label_text } from \"../../../utils/text\";\nvar AppConfirmDialog = function (_a) {\n    var title = _a.title, body = _a.body, open = _a.open, onClose = _a.onClose, onConfirm = _a.onConfirm;\n    var _b = useState(false), checked = _b[0], setChecked = _b[1];\n    var handleConfirm = function (askConfirm) { return function () {\n        onConfirm(askConfirm);\n    }; };\n    return (React.createElement(Dialog, { open: open, onClose: onClose, \"aria-labelledby\": \"alert-dialog-title\", \"aria-describedby\": \"alert-dialog-description\" },\n        React.createElement(DialogTitle, { id: \"alert-dialog-title\" }, title),\n        React.createElement(DialogContent, null,\n            React.createElement(DialogContentText, { id: \"alert-dialog-description\" }, body)),\n        React.createElement(DialogActions, null,\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: checked, onChange: function () { return setChecked(!checked); } }), label: label_text.askConfirm, labelPlacement: \"end\" })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: handleConfirm(!checked) }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"),\n            React.createElement(Button, { onClick: onClose, autoFocus: true }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n};\nexport default AppConfirmDialog;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport DataGridToolbar from \"./DataGridToolbar\";\nimport { useDataGrid } from \"./useDataGrid\";\nimport AppConfirmDialog from \"./AppConfirmDialog\";\nvar testMode = process.env.NODE_ENV === \"test\";\nvar commonBoxStyles = {\n    width: \"100%\",\n    \"& .actions\": {\n        color: \"text.secondary\",\n    },\n    \"& .textPrimary\": {\n        color: \"text.primary\",\n    },\n};\nvar testBoxStyles = __assign({ minHeight: 450 }, commonBoxStyles);\nvar FullFeaturedCrudGrid = function (_a) {\n    var data = _a.data, loading = _a.loading;\n    var _b = useDataGrid(), rows = _b.rows, rowModesModel = _b.rowModesModel, columns = _b.columns, handlers = _b.handlers, apiRef = _b.apiRef, activeRequests = _b.activeRequests, confirmOpen = _b.confirmOpen;\n    var handleAddNewRow = handlers.handleAddNewRow, handleRowEditStop = handlers.handleRowEditStop, handleRowModesModelChange = handlers.handleRowModesModelChange, processRowUpdate = handlers.processRowUpdate, onProcessRowUpdateError = handlers.onProcessRowUpdateError, onClose = handlers.onClose, onConfirm = handlers.onConfirm;\n    return React.useMemo(function () { return (React.createElement(Box, { sx: testMode ? testBoxStyles : commonBoxStyles },\n        React.createElement(DataGrid, { rows: __spreadArray(__spreadArray([], data, true), rows, true), columns: columns, editMode: \"row\", rowModesModel: rowModesModel, onRowModesModelChange: handleRowModesModelChange, onRowEditStop: handleRowEditStop, processRowUpdate: processRowUpdate, onProcessRowUpdateError: onProcessRowUpdateError, slots: {\n                toolbar: DataGridToolbar,\n            }, slotProps: {\n                toolbar: { handleAddNewRow: handleAddNewRow },\n            }, initialState: {\n                pagination: testMode\n                    ? { paginationModel: { pageSize: 10 } }\n                    : { paginationModel: { pageSize: 5 } },\n                sorting: {\n                    sortModel: [{ field: \"employeeSigDate\", sort: \"desc\" }],\n                },\n            }, sx: { minHeight: 450, p: 1 }, apiRef: apiRef, loading: loading && !activeRequests, pageSizeOptions: [5, 10, 25, 50, 100], autoHeight: testMode ? false : true }),\n        React.createElement(AppConfirmDialog, { title: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435\", body: \"\", open: confirmOpen, onClose: onClose, onConfirm: onConfirm() }))); }, [\n        data,\n        loading,\n        rows,\n        rowModesModel,\n        columns,\n        apiRef,\n        handleAddNewRow,\n        handleRowEditStop,\n        handleRowModesModelChange,\n        processRowUpdate,\n        onProcessRowUpdateError,\n        activeRequests,\n        onClose,\n        onConfirm,\n        confirmOpen,\n    ]);\n};\nexport default FullFeaturedCrudGrid;\n","import { useCallback, useState } from \"react\";\nexport var useConfirmDialog = function () {\n    var _a = useState(true), askConfirm = _a[0], setAskConfirm = _a[1];\n    var _b = useState(), confirmOpen = _b[0], setConfirmOpen = _b[1];\n    var onClose = useCallback(function () {\n        setConfirmOpen(undefined);\n    }, []);\n    var onConfirm = useCallback(function () { return function (ask) {\n        setAskConfirm(ask);\n        if (!!confirmOpen) {\n            confirmOpen();\n            setConfirmOpen(undefined);\n        }\n    }; }, [confirmOpen]);\n    return {\n        askConfirm: askConfirm,\n        confirmOpen: confirmOpen,\n        onClose: onClose,\n        onConfirm: onConfirm,\n        setConfirmOpen: setConfirmOpen,\n    };\n};\n"],"names":["_a","handleAddNewRow","GridToolbarContainer","sx","justifyContent","Button","color","startIcon","Add","A","onClick","addNewRecord","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","commonColsDef","field","editable","minWidth","renderEditCell","params","GridEditInputCell","title","error_message","preProcessEditCellProps","hasError","props","value","error","columnsDef","type","headerName","employeeNumber","align","flex","employeeSigDate","renderCell","_b","toLocaleString","toLocaleDateString","valueGetter","Date","documentType","documentName","documentStatus","companySigDate","employeeSignatureName","companySignatureName","emptySingleRecord","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__spreadArray","to","from","pack","ar","l","Array","slice","concat","askConfirm","open","onClose","onConfirm","useState","checked","setChecked","Dialog","DialogTitle","id","DialogContent","DialogContentText","DialogActions","FormControlLabel","control","Checkbox","onChange","labelPlacement","autoFocus","commonBoxStyles","width","minHeight","data","loading","rowModesModel","setRowModesModel","fetchingRows","setFetchingRows","showSnackbar","useAppSnackbar","dispatch","_c","setAskConfirm","confirmOpen","setConfirmOpen","useCallback","undefined","ask","useConfirmDialog","_d","newRows","setNewRows","apiRef","useGridApiRef","createRow","updateRow","deleteRow","handleEditClick","mode","Edit","handleSaveClick","includes","View","deleteAfterConfirm","callback","handleDeleteClick","response","addFetchingRow","unwrap","catch","err","name","removeFetchingRow","handleCancelClick","ignoreModifications","find","row","removeRow","handleRowEditStop","event","defaultMuiPrevented","reason","escapeKeyDown","enterKeyDown","processRowUpdate","newRow","returnedRow","message","record","_i","keys_1","keys","filter","key","hasEmptyFields","onProcessRowUpdateError","handleRowModesModelChange","newRowModesModel","toISOString","addNewRow","oldModel","fieldToFocus","current","setPage","sortColumn","prev","rowID","columns","useMemo","cellClassName","getActions","isInEditMode","enableIndicator","indicator","GridActionsCellItem","icon","Loop","disabled","animation","transform","editModeActions","Save","className","viewModeActions","rows","handlers","activeRequests","useDataGrid","Box","DataGrid","editMode","onRowModesModelChange","onRowEditStop","slots","toolbar","slotProps","initialState","pagination","paginationModel","pageSize","sorting","sortModel","sort","pageSizeOptions","autoHeight"],"sourceRoot":""}